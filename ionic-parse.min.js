/**
 * utils-demo - 
 * @version v0.0.1 - 2015-01-05
 * @link 
 * @license 
 */
"use strict";angular.module("tm.ionic-parse",["ionic"]).provider("Parse",function(){var a={applicationId:"",javaScriptKey:"",clientKey:""};this.configure=function(b){angular.extend(a,b)},this.$get=function(a){return function(b,c,d){var e=b.defer(),f=c.Parse;return delete c.Parse,f.initialize(a.applicationId,a.javaScriptKey),d.ready(function(){if(c.parsePlugin){var b=c.parsePlugin;delete c.parsePlugin,b.initialize(a.applicationId,a.clientKey,function(){e.resolve(b)},function(){e.reject(b)})}}),f.nativeBridge=e.promise,f}}(a)}),angular.module("tm.ionic-parse",["ionic"]).provider("Parse",function(){var a={applicationId:"",javaScriptKey:"",clientKey:""};this.configure=function(b){angular.extend(a,b)},this.$get=function(a){return function(b,c,d){var e=b.defer(),f=c.Parse;return delete c.Parse,f.initialize(a.applicationId,a.javaScriptKey),d.ready(function(){if(c.parsePlugin){var b=c.parsePlugin;delete c.parsePlugin,b.initialize(a.applicationId,a.clientKey,function(){e.resolve(b)},function(){e.reject(b)})}}),f.nativeBridge=e.promise,f}}(a)}),angular.module("tm.ionic-parse",["ionic"]).service("Parse",["$q","$window","$ionicPlatform",function(a,b,c){var d=a.defer(),e={applicationId:"",javaScriptKey:"",clientKey:""};this.configure=function(a){angular.extend(e,a)};var f=b.Parse;return delete b.Parse,f.initialize(e.applicationId,e.javaScriptKey),c.ready(function(){if(b.parsePlugin){var a=b.parsePlugin;delete b.parsePlugin,a.initialize(e.applicationId,e.clientKey,function(){d.resolve(a)},function(){d.reject(a)})}}),f.nativeBridge=d.promise,f}]),angular.module("tm.ionic-parse",["ionic"]).service("Parse",["$q","$window","$ionicPlatform",function(a,b,c){var d=a.defer(),e=this;this.getKeys=function(){return{applicationId:"",javaScriptKey:"",clientKey:""}};var f=b.Parse;return delete b.Parse,f.initialize(e.getKeys().applicationId,e.getKeys().javaScriptKey),c.ready(function(){if(b.parsePlugin){var a=b.parsePlugin;delete b.parsePlugin,a.initialize(e.getKeys().applicationId,e.getKeys().clientKey,function(){d.resolve(a)},function(){d.reject(a)})}}),f.nativeBridge=d.promise,f}]);