/**
 * themeans-core - 
 * @version v0.1.0 - 2015-04-04
 * @link 
 * @license 
 */
"use strict";angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log","$state",function(b,c,d,e,f,g,h){function i(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var j=this;return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j?(g.error("User has no id or objectId: cannot getUserRoles."),h.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(){g.error("Parse Cloud Error: getUserRoles returned error."),h.reject()}}),h.promise)},this.getUserRolesWithErrorHandling=function(a,c){function d(){f.clear(),e.User.logOut(),h.go("login"),g.reject()}var g=b.defer();return j.getUserRoles(a).then(function(a){return c&&!a||!a.length?d():void g.resolve(a)},d),g.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return i(a,!0)},this.getSettingsByIdForDisplay=function(a){return i(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log","$state",function(b,c,d,e,f,g,h){function i(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var j=this;return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j?(g.error("User has no id or objectId: cannot getUserRoles."),h.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(){g.error("Parse Cloud Error: getUserRoles returned error."),h.reject()}}),h.promise)},this.getUserRolesWithErrorHandling=function(a,c){function d(){f.clear(),e.User.logOut(),h.go("login"),g.reject()}var g=b.defer();return j.getUserRoles(a).then(function(a){return c&&!a||!a.length?d():void g.resolve(a)},d),g.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return i(a,!0)},this.getSettingsByIdForDisplay=function(a){return i(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log","$state",function(b,c,d,e,f,g,h){function i(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var j=this;return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j?(g.error("User has no id or objectId: cannot getUserRoles."),h.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(){g.error("Parse Cloud Error: getUserRoles returned error."),h.reject()}}),h.promise)},this.getUserRolesWithErrorHandling=function(a,c){function d(){f.clear(),e.User.logOut(),h.go("login"),g.reject()}var g=b.defer();return j.getUserRoles(a).then(function(a){return c&&!a||!a.length?d():void g.resolve(a)},d),g.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return i(a,!0)},this.getSettingsByIdForDisplay=function(a){return i(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log","$state",function(b,c,d,e,f,g,h){function i(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var j=this;return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j?(g.error("User has no id or objectId: cannot getUserRoles."),h.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(){g.error("Parse Cloud Error: getUserRoles returned error."),h.reject()}}),h.promise)},this.getUserRolesWithErrorHandling=function(a,c){function d(){f.clear(),e.User.logOut(),h.go("login"),g.reject()}var g=b.defer();return j.getUserRoles(a).then(function(a){return c&&!a||!a.length?d():void g.resolve(a)},d),g.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return i(a,!0)},this.getSettingsByIdForDisplay=function(a){return i(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this});