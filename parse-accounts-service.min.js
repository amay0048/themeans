/**
 * utils-demo - 
 * @version v0.0.2 - 2015-03-13
 * @link 
 * @license 
 */
"use strict";angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise}}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("Parse",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise}}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).service("tmAccounts",["$q","Parse","tmLocalStorage",function(a,b,c){this.getUserRoles=function(d){var e=a.defer(),f=new b.Query(b.Role);return f.equalTo("users",d),f.find({success:function(a){for(var b=[],f=0;f<a.length;f++)b.push(a[f].get("name"));c.setObject(d.id+"-roles",b),b=c.getObject(d.id+"-roles"),e.resolve(b)},error:function(a,b){e.reject(b)}}),e.promise},this.getUserById=function(c){var d=a.defer(),e=new b.Query(b.User);return e.get(c,{success:function(a){d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise},this.getUserSettings=function(c){var d=a.defer(),e=new b.Query(b.User);return e.get(c,{success:function(a){d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).service("tmAccounts",["$q","Parse","tmLocalStorage",function(a,b,c){this.getUserRoles=function(d){var e=a.defer(),f=new b.Query(b.Role);return f.equalTo("users",d),f.find({success:function(a){for(var b=[],f=0;f<a.length;f++)b.push(a[f].get("name"));c.setObject(d.id+"-roles",b),b=c.getObject(d.id+"-roles"),e.resolve(b)},error:function(a,b){e.reject(b)}}),e.promise},this.getUserById=function(c){var d=a.defer(),e=new b.Query(b.User);return e.get(c,{success:function(a){d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise},this.getUserSettings=function(c){var d=a.defer(),e=new b.Query(b.User);return e.get(c,{success:function(a){d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).service("tmAccounts",["$q","Parse","tmLocalStorage",function(a,b,c){this.getUserRoles=function(d){var e=a.defer(),f=new b.Query(b.Role);return f.equalTo("users",d),f.find({success:function(a){for(var b=[],f=0;f<a.length;f++)b.push(a[f].get("name"));c.setObject(d.id+"-roles",b),b=c.getObject(d.id+"-roles"),e.resolve(b)},error:function(a,b){e.reject(b)}}),e.promise},this.getUserById=function(c){var d=a.defer(),e=new b.Query(b.User);return e.get(c,{success:function(a){d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]);