/**
 * themeans-core - 
 * @version v0.1.0 - 2015-04-04
 * @link 
 * @license 
 */
"use strict";angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",isSecured:!1};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return a.isSecured===!0?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",isSecured:!1};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return a.isSecured===!0?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",isSecured:!1};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return a.isSecured===!0?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",isSecured:!1};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return a.isSecured===!0?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",userSecurityLevel:"default"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return"secured"===a.userSecurityLevel?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",settingEditCacheKey:"User/Settings/Edit",rolesCacheKey:"User/Roles",userSecurityLevel:"default"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(c){var d,h=b.defer(),i=new e.Query(e.Role),j=a.rolesCacheKey;return c.fetch().then(function(){i.equalTo("users",c),i.find().then(function(a){d=a.map(function(a){return a.get("name")}),f.setObject(j,d),d=f.getObject(j,[]),h.resolve(d)},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()})},function(a){g.error("Parse Error: "+a.message,a.code),h.reject()}),h.promise}function i(c){var d=b.defer(),h=a.rolesCacheKey,i=c.id||c.objectId;return"undefined"==typeof i?(g.error("User has no id or objectId: cannot get users roles."),d.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:i},{success:function(a){f.setObject(h,a),a=f.getObject(h,[]),d.resolve(a)},error:function(a){g.error("Parse Cloud getUserRoles Error: "+a.message),d.reject()}}),d.promise)}function j(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(b){return"secured"===a.userSecurityLevel?i(b):h(b)},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return j(a,!0)},this.getSettingsByIdForDisplay=function(a){return j(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log","$state",function(b,c,d,e,f,g,h){function i(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var j=this;return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j?(g.error("User has no id or objectId: cannot getUserRoles."),h.reject({message:"Please try logging in again, or contact system admin."})):(e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(){g.error("Parse Cloud Error: getUserRoles returned error."),h.reject()}}),h.promise)},this.getUserRolesWithErrorHandling=function(a,c){function d(){f.clear(),e.User.logOut(),h.go("login"),g.reject()}var g=b.defer();return j.getUserRoles(a).then(function(a){return c&&!a||!a.length?d():void g.resolve(a)},d),g.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return i(a,!0)},this.getSettingsByIdForDisplay=function(a){return i(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j&&h.reject({message:"Please try logging in again, or contact system admin."}),e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(a){g.error("Parse Cloud Error: "+a.message),h.reject({message:"Please try logging in again, or contact system admin."})}}),h.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j&&h.reject({message:"Please try logging in again, or contact system admin."}),e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(a){g.error("Parse Cloud Error: "+a.message),h.reject({message:"Please try logging in again, or contact system admin."})}}),h.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.message,b.code),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j&&h.reject({message:"Please try logging in again, or contact system admin."}),e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(a){g.error("Parse Cloud Error: "+a.message),h.reject({message:"Please try logging in again, or contact system admin."})}}),h.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}return this.getUserRoles=function(c){var d,h=b.defer(),i=a.rolesCacheKey,j=c.id||c.objectId;return"undefined"==typeof j&&h.reject({message:"Please try logging in again, or contact system admin."}),e.Cloud.run("getUserRoles",{userId:j},{success:function(a){f.setObject(i,a),d=f.getObject(i,[]),h.resolve(d)},error:function(a){g.error("Parse Cloud Error: "+a.message),h.reject({message:"Please try logging in again, or contact system admin."})}}),h.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Cannot find cached User roles."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.error("Parse Error: "+a.code+" "+a.message),c.reject({message:"Please try again in a few moments."})})},function(a){g.error("Parse User account doesn't exist, Error: "+a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.error("Parse Error: Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Cannot find cached User roles."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.error("Parse Error: "+a.code+" "+a.message),c.reject({message:"Please try again in a few moments."})})},function(a){g.error("Parse User account doesn't exist, Error: "+a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.error("Parse Error: Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Cannot find cached User roles."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.error("Parse Error: "+a.code+" "+a.message),c.reject({message:"Please try again in a few moments."})})},function(a){g.error("Parse User account doesn't exist, Error: "+a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})
}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.error("Parse Error: Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Cannot find cached User roles."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.error("Parse Error: "+a.code+" "+a.message),c.reject({message:"Please try again in a few moments."})})},function(a){g.error("Parse User account doesn't exist, Error: "+a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.error("Parse Error: Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+" "+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage","$log",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.error("Parse Error: "+b.code+b.message),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.warn("Cannot find cached User roles."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.error("Parse Error: "+a.code+a.message),c.reject({message:"Please try again in a few moments."})})},function(a){g.warn("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.error("Parse Error: Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.error("Parse Error: "+b.code+b.message),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+b.message),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.error("Parse Error: "+b.code+b.message),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.warn("Parse Error: ",b),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.warn("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){g.warn("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.warn("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.warn("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.warn("Parse Error: ",b),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.warn("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){g.warn("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.warn("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.warn("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f,g){function h(h,i){var j,k=b.defer(),l=new e.Query(d),m=a.settingsCacheKey;return i&&(m=a.settingsEditCacheKey),c(function(){var a=f.getObject(m);k.notify(a)},0),l.get(h,{success:function(a){var b=a.getNgModel();i&&(b=a.getNgFormModel()),f.setObject(m,b),j=f.getObject(m),k.resolve(j)},error:function(a,b){g.warn("Parse Error: ",b),k.reject({message:"Please try again in a few moments, or contact support."})}}),k.promise}var i=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){i.getUserRoles(a).then(function(a){return a?void c.resolve():(g.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){g.warn("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){g.warn("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),h=new e.Query(e.Role),i=a.rolesCacheKey;return h.equalTo("users",c),h.find({success:function(a){a.length||(g.warn("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(i,b),b=f.getObject(i,[]),d.resolve(b)},error:function(a,b){g.warn("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.isUserInRole=function(b){var c=f.getObject(a.rolesCacheKey,[]);return c.indexOf(b)>=0?!0:!1},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return h(a,!0)},this.getSettingsByIdForDisplay=function(a){return h(a,!1)},this.updateSettings=function(c){var e=b.defer(),h=new d(c,{ngModel:!0,resetOpsQueue:!1}),i=a.settingsEditCacheKey;return h.save(null,{success:function(a){f.setObject(i,a),a=f.getObject(i),e.resolve(a)},error:function(a,b){g.warn("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).provider("tmAccounts",function(){var a={settingsCacheKey:"User/Settings",rolesCacheKey:"User/Roles",settingEditCacheKey:"User/Settings/Edit"};return this.configure=function(b){angular.extend(a,b)},this.$get=["$q","$timeout","Settings","Parse","tmLocalStorage",function(b,c,d,e,f){function g(g,h){var i,j=b.defer(),k=new e.Query(d),l=a.settingsCacheKey;return h&&(l=a.settingsEditCacheKey),c(function(){var a=f.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),f.setObject(l,b),i=f.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;return this.userAuthentication=function(a){var c=b.defer();return a.fetch().then(function(){h.getUserRoles(a).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(c){var d=b.defer(),g=new e.Query(e.Role),h=a.rolesCacheKey;return g.equalTo("users",c),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),d.reject({message:"There is an error with your account, please contact support."}));for(var b=[],c=0;c<a.length;c++)b.push(a[c].get("name"));f.setObject(h,b),b=f.getObject(h,[]),d.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise},this.getUserById=function(a){var c=b.defer(),d=new e.Query(e.User);return d.get(a,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(c){var e=b.defer(),g=new d(c,{ngModel:!0,resetOpsQueue:!1}),h=a.settingsEditCacheKey;return g.save(null,{success:function(a){f.setObject(h,a),a=f.getObject(h),e.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),e.reject({message:"Please try again in a few moments, or contact support."})}}),e.promise},this}],this}),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage","CACHEKEYS",function(a,b,c,d,e,f){function g(g,h){var i,j=a.defer(),k=new d.Query(c),l=f.settings+g;return h&&(l=f["settings:edit"]+g),b(function(){var a=e.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),e.setObject(l,b),i=e.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){h.getUserRoles(b).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),g=new d.Query(d.Role),h=f["roles:user"]+b.id;return g.equalTo("users",b),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),c.reject({message:"There is an error with your account, please contact support."}));for(var b=[],d=0;d<a.length;d++)b.push(a[d].get("name"));e.setObject(h,b),b=e.getObject(h,[]),c.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(b){var d=a.defer(),g=new c(b,{ngModel:!0,resetOpsQueue:!1}),h=f["settings:edit"]+g.id;return g.save(null,{success:function(a){e.setObject(h,a),a=e.getObject(h),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage","CACHEDKEYS",function(a,b,c,d,e,f){function g(g,h){var i,j=a.defer(),k=new d.Query(c),l=f.settings+g;return h&&(l=f["settings:edit"]+g),b(function(){var a=e.getObject(l);j.notify(a)},0),k.get(g,{success:function(a){var b=a.getNgModel();h&&(b=a.getNgFormModel()),e.setObject(l,b),i=e.getObject(l),j.resolve(i)},error:function(a,b){console.error("Parse Error: ",b),j.reject({message:"Please try again in a few moments, or contact support."})}}),j.promise}var h=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){h.getUserRoles(b).then(function(a){return a?void c.resolve():(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),g=new d.Query(d.Role),h=f["roles:user"]+b.id;return g.equalTo("users",b),g.find({success:function(a){a.length||(console.log("Parse Error: ","Parse User is not associated with any roles."),c.reject({message:"There is an error with your account, please contact support."}));for(var b=[],d=0;d<a.length;d++)b.push(a[d].get("name"));e.setObject(h,b),b=e.getObject(h,[]),c.resolve(b)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return g(a,!0)},this.getSettingsByIdForDisplay=function(a){return g(a,!1)},this.updateSettings=function(b){var d=a.defer(),g=new c(b,{ngModel:!0,resetOpsQueue:!1}),h=f["settings:edit"]+g.id;return g.save(null,{success:function(a){e.setObject(h,a),a=e.getObject(h),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)
},error:function(a,b){console.error("Parse Error: ",b),i.reject({message:"Please try again in a few moments, or contact support."})}}),i.promise}var g=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){g.getUserRoles(b).then(function(a){return a?void 0:(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){console.error("Parse Error: ",b),i.reject({message:"Please try again in a few moments, or contact support."})}}),i.promise}var g=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){g.getUserRoles(b).then(function(a){return a?void 0:(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){console.error("Parse Error: ",b),i.reject({message:"Please try again in a few moments, or contact support."})}}),i.promise}var g=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){g.getUserRoles(b).then(function(a){return a?void 0:(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){console.error("Parse Error: ",b),i.reject({message:"Please try again in a few moments, or contact support."})}}),i.promise}var g=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){g.getUserRoles(b).then(function(a){return a?void 0:(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){console.error("Parse Error: ",b),i.reject({message:"Please try again in a few moments, or contact support."})}}),i.promise}var g=this;this.userAuthentication=function(b){var c=a.defer();return b.fetch().then(function(){g.getUserRoles(b).then(function(a){return a?void 0:(console.error("Error: cached user roles array has been deleted."),void c.reject({message:"Please try again, or contact system admin"}))},function(a){console.error("Parse Error: ",a),c.reject({message:"Please try again in a few moments."})})},function(a){console.error("Parse User account doesn't exist",a),c.reject({message:"Your account doesn't exist. If this is unexpected please contact support."})}),c.promise},this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),c.reject({message:"Please try again in a few moments, or contact support."})}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b),d.reject({message:"Please try again in a few moments, or contact support."})}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){console.error("Parse Error: ",b.code,b.message),i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject("user:roles:"+b.id,d),d=e.getObject("user:roles:"+b.id,[]),c.resolve(d)},error:function(a,b){console.error("Parse Error: ",b.code,b.message),c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){console.error("Parse Error: ",b.code,b.message),c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){console.error("Parse Error: ",b.code,b.message),d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=new d.Query(c),k="settings:display:"+f;return g&&(k="settings:edit:"+f),b(function(){var a=e.getObject(k);i.notify(a)},0),j.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(k,b),h=e.getObject(k),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(b){var d=a.defer(),f=new c(b,{ngModel:!0,resetOpsQueue:!1});return f.save(null,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),d.resolve(a)},error:function(a,b){d.reject(b)}}),d.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]),angular.module("tm.parseAccounts",["tm.parse","tm.localstorage"]).factory("Settings",["Parse",function(a){return a.Object.extend("Settings")}]).service("tmAccounts",["$q","$timeout","Settings","Parse","tmLocalStorage",function(a,b,c,d,e){function f(f,g){var h,i=a.defer(),j=(new d.Query(c),"settings:display:"+f);return g&&(j="settings:edit:"+f),b(function(){var a=e.getObject(j);i.notify(a)},0),settingssQuery.get(f,{success:function(a){var b=a.getNgModel();g&&(b=a.getNgFormModel()),e.setObject(j,b),h=e.getObject(j),i.resolve(h)},error:function(a,b){i.reject(b)}}),i.promise}this.getUserRoles=function(b){var c=a.defer(),f=new d.Query(d.Role);return f.equalTo("users",b),f.find({success:function(a){for(var d=[],f=0;f<a.length;f++)d.push(a[f].get("name"));e.setObject(b.id+"-roles",d),d=e.getObject(b.id+"-roles"),c.resolve(d)},error:function(a,b){c.reject(b)}}),c.promise},this.getUserById=function(b){var c=a.defer(),e=new d.Query(d.User);return e.get(b,{success:function(a){c.resolve(a)},error:function(a,b){c.reject(b)}}),c.promise},this.getSettingsByIdForEditing=function(a){return f(a,!0)},this.getSettingsByIdForDisplay=function(a){return f(a,!1)},this.updateSettings=function(){var b=a.defer(),d=new c;return d.save(settingsModel,{success:function(a){e.setObject(a.id,a),a=e.getObject(a.id),b.resolve(a)},error:function(a,c){b.reject(c)}}),b.promise}}]);